---
import '../assets/css/main.css';
import "aos/dist/aos.css"; // AOS styles
import { ViewTransitions } from "astro:transitions";
import TheNav from '../components/TheNav.astro';
import TheFooter from '../components/TheFooter.astro';

const { title, description, image } = Astro.props;

interface Props {
	title: string;
	description: string;
	image?: string;
}

// const siteUrl = Astro.url.pathname;
// const siteUrl = new URL(Astro.url.pathname, Astro.site);

---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<!-- Global Metadata -->
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width,initial-scale=1" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />

		<!-- Google Tag Manager -->
	<!-- <script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
	new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
	j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
	'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
	})(window,document,'script','dataLayer','GTM-NFNM89Q4');</script> -->
	<!-- End Google Tag Manager -->

		<!-- icons
		<link rel="shortcut icon" type="image/x-icon" href="/img/favicon.ico">
		<link rel="icon" type="image/png" sizes="32x32" href="/img/favicon-32x32.png">
		<link rel="icon" type="image/png" sizes="16x16" href="/img/favicon-16x16.png">
		<link rel="apple-touch-icon" sizes="180x180" href="/img/apple-touch-icon.png">  -->

		<!-- Font preloads -->

		<link rel="preconnect" href="https://fonts.googleapis.com">
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
		<link href="https://fonts.googleapis.com/css2?family=Inter+Tight:wght@400;500;700;900&family=Gloock&family=WindSong:wght@400;500&display=swap" rel="stylesheet">
		<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
		<!-- <link rel="preload" href="/fonts/atkinson-regular.woff" as="font" type="font/woff" crossorigin />
		<link rel="preload" href="/fonts/atkinson-bold.woff" as="font" type="font/woff" crossorigin /> -->

		<!-- bootstrap css -->
		<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">

		<!-- Canonical URL -->
		<link rel="canonical" href={Astro.url} />

		<!-- Primary Meta Tags -->
		<title>{title}</title>
		<meta name="title" content={title} />
		<meta name="description" content={description} />

		<!-- Open Graph / Facebook -->
		<meta property="og:type" content="website" />
		<meta property="og:url" content={`https://princecollection.com${Astro.url.pathname}`}/>
		<meta property="og:title" content={title} />
		<meta property="og:description" content={description} />
		<meta property="og:image" content={image} />

		<!-- Twitter -->
		<meta property="twitter:card" content="summary_large_image" />
		<meta property="twitter:url" content={Astro.url} />
		<meta property="twitter:title" content={title} />
		<meta property="twitter:description" content={description} />
		<meta property="twitter:image" content={image} />
		
		<!-- Netlify CMS -->
		<script src="https://identity.netlify.com/v1/netlify-identity-widget.js" is:inline></script>
		<ViewTransitions />
	</head>
	<TheNav/>
	<body>
		<!-- Google Tag Manager (noscript) -->
		<!-- <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-NFNM89Q4" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript> -->
		<!-- End Google Tag Manager (noscript) -->
		<main>
			<slot />
		</main>
	<TheFooter/>
	<script async src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>
	<script>
		// AOS init + reinit on page change
		import { aosInit } from "../js/aosInit";
		aosInit();

		document.addEventListener('astro:after-swap', () => {
			window.scrollTo({ left: 0, top: 0, behavior: 'instant' });
			lazyLoad();
			// addLazyAttr();
			aosInit();
			console.log('AOS reloaded!');
		});

		// document.addEventListener('astro:page-load', () => {
		// 	aosInit();
		// 	console.log('AOS reloaded!');
		// });

		// decap/netlify
		if (window.netlifyIdentity) {
			window.netlifyIdentity.on("init", user => {
			if (!user) {
				window.netlifyIdentity.on("login", () => {
				document.location.href = "/admin/";
				});
			}
			});
		}

		function lazyLoad() {
		// lazyload images
		const observer = new IntersectionObserver(callback);
		var lazyImages = [].slice.call(document.querySelectorAll("img"));

		lazyImages.forEach((lazyImage)=> {
			// add animate-in class to all images
			lazyImage.classList.add('animate-in');
			// check if image contains logo class so it loads immediately
			if (lazyImage.classList.contains('logo')) {
			return;
			} else if (lazyImage.hasAttribute("data-src")) {
				// add placeholder until src is replaced
				lazyImage.src = '/images/general/pc-placeholder-light.png';
				observer.observe(lazyImage);
			} else {
				// add loading attribute to post images
				lazyImage.setAttribute('loading', 'lazy');
			}
		});

		function callback(entries, observer){
			entries.forEach((entry) => {
				const target = entry.target;
				const dataSrc = target.getAttribute('data-src');        
				if (entry.isIntersecting) {
					// put the desired url(dataSrc) as the src          
					target.setAttribute('src', dataSrc);
				// stop observing the element
				observer.unobserve(target);
				}        
			});    
		};
		}

		function addLazyAttr() {
			const imageLazy = document.querySelectorAll("#content > img");
			imageLazy.forEach((image)=> {
				image.setAttribute('loading', 'lazy');
				console.log('post img loaded!')
			});
		}

		lazyLoad();
		// addLazyAttr();

		function thanks(inputID, modalID) {
			const inpObj = document.getElementById(inputID);
			if (inpObj.checkValidity() === false) {
				// alert("Please include a valid email address");
			return false;
			} else {
				var modal1 = new bootstrap.Modal(document.getElementById(modalID)); 
				function showhide() { 
					// show Modal 
					modal1.show(); 
					// hide the modal after 5 seconds 
					setTimeout(() => { 
						modal1.hide(); 
					}, 5500) 
				} 
				showhide();
			}
		}
		</script>
	</body>
</html>